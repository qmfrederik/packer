---
# playbook.yml
- name: 'Provision Image'
  hosts: default
  vars:
    epgw_url_arm64: https://qmcdn.blob.core.windows.net/epgw/epgw.25.1.3-0117.linux-arm64.tar.gz
    epgw_hash_arm64: sha1:e6c73857789b420d9b02c18c459fa29afaff1f0b

    epgw_url_x64: https://qmcdn.blob.core.windows.net/epgw/epgw.25.1.3-0117.linux-x64.tar.gz
    epgw_hash_x64: sha1:6074d3550b5e16aa4618b50302fce8fc272e8ab2

    keycloak_url: https://github.com/keycloak/keycloak/releases/download/26.0.7/keycloak-26.0.7.tar.gz
    keycloak_hash: sha1:82b65b4741378a9fda1fdd3556c7b3a58c8a4ebd

    quarkus_systemd_notify_url: https://repo1.maven.org/maven2/io/quarkiverse/systemd/notify/quarkus-systemd-notify/1.0.2/quarkus-systemd-notify-1.0.2.jar
    quarkus_systemd_notify_hash: sha1:3358e05408c5fe9983ed45ed443347316852aebc

    quarkus_systemd_notify_deployment_url: https://repo1.maven.org/maven2/io/quarkiverse/systemd/notify/quarkus-systemd-notify-deployment/1.0.2/quarkus-systemd-notify-deployment-1.0.2.jar
    quarkus_systemd_notify_deployment_hash: sha1:fddd14a0d21db557c18bd9176f3da6c788a52c26

    keycloak_bootstrap_admin_username: admin
    keycloak_bootstrap_admin_password: admin

    keycloak_eggplant_realm: eggplant
    keycloak_epgw_client_id: epgw
    keycloak_epgw_client_secret: a9a49b2f-6bd6-4d2c-b443-241e8448abbb
  become: true

  tasks:
    - name: "Install dependencies ({{ ansible_distribution }})"
      include_tasks: "playbook.{{ ansible_distribution | lower }}.yml"

    ###########################################################################
    # Install Eggplant Gateway                                                #
    ###########################################################################

    - name: Determine if the Eggplant Gateway is installed
      ansible.builtin.stat:
        path: /opt/epgw/epgw
      register: epgw

    - name: Download Eggplant Gateway (arm64)
      ansible.builtin.get_url:
        url: '{{ epgw_url_arm64 }}'
        dest: '/tmp/epgw.tar.gz'
        checksum: '{{ epgw_hash_arm64 }}'
        mode: '644'
      when: ansible_architecture == "aarch64" and not epgw.stat.exists

    - name: Download Eggplant Gateway (x64)
      ansible.builtin.get_url:
        url: '{{ epgw_url_x64 }}'
        dest: '/tmp/epgw.tar.gz'
        checksum: '{{ epgw_hash_x64 }}'
        mode: '644'
      when: ansible_architecture == "x86_64" and not epgw.stat.exists

    - name: Create Eggplant Gateway directory
      ansible.builtin.file:
        path: /opt/epgw
        state: directory

    - name: Install Eggplant Gateway into /opt/epgw
      ansible.builtin.unarchive:
        remote_src: true
        src: /tmp/epgw.tar.gz
        dest: /opt/epgw
      when: not epgw.stat.exists
      
    - name: Create /usr/local/bin/epgw symlink
      ansible.builtin.file:
        src: /opt/epgw/epgw
        dest: /usr/local/bin/epgw
        state: link

    - name: Create epgw user
      ansible.builtin.user:
        name: epgw

    - name: Creates /var/lib/epgw directory
      ansible.builtin.file:
        path: /var/lib/epgw
        state: directory
        owner: epgw
        mode: '0755'

    - name: Create epgw systemd service file
      template:
        src: epgw.service.j2
        dest: /lib/systemd/system/epgw.service

    ###########################################################################
    # Install Keycloak                                                        #
    ###########################################################################

    - name: Determine if the Eggplant Gateway is installed
      ansible.builtin.stat:
        path: /opt/keycloak/bin/kc.sh
      register: keycloak

    - name: Download Keycloak
      ansible.builtin.get_url:
        url: '{{ keycloak_url }}'
        dest: '/tmp/keycloak.tar.gz'
        checksum: '{{ keycloak_hash }}'
        mode: '644'
      when: not keycloak.stat.exists

    - name: Create keycloak user
      ansible.builtin.user:
        name: keycloak

    - name: Create /opt/keycloak/ directory
      ansible.builtin.file:
        path: /opt/keycloak/
        state: directory
        owner: keycloak
        mode: '0755'

    - name: Install Keycloak into /opt/keycloak
      ansible.builtin.unarchive:
        remote_src: true
        src: /tmp/keycloak.tar.gz
        dest: /opt/keycloak
        owner: keycloak
        # Remove the top-level directory
        extra_opts: ['--strip-components=1', '--show-stored-names']
      when: not keycloak.stat.exists

    - name: Download quarkus-systemd-notify-deployment
      ansible.builtin.get_url:
        url: '{{ quarkus_systemd_notify_url }}'
        dest: '/opt/keycloak/providers/'
        checksum: '{{ quarkus_systemd_notify_hash }}'
        mode: '644'

    - name: Download quarkus-systemd-notify-deployment
      ansible.builtin.get_url:
        url: '{{ quarkus_systemd_notify_deployment_url }}'
        dest: '/opt/keycloak/providers/'
        checksum: '{{ quarkus_systemd_notify_deployment_hash }}'
        mode: '644'

    - name: Create Keycloak systemd service file
      template:
        src: keycloak.service.j2
        dest: /lib/systemd/system/keycloak.service

    - name: Start Keycloak service
      ansible.builtin.systemd_service:
        name: keycloak
        state: started
        enabled: true
        daemon_reload: true

    ###########################################################################
    # Configure Keycloak                                                      #
    ###########################################################################

    - name: Create the Eggplant realm
      community.general.keycloak_realm:
        auth_client_id: admin-cli
        auth_keycloak_url: http://localhost:8080/
        auth_realm: master
        auth_username: "{{ keycloak_bootstrap_admin_username }}"
        auth_password: "{{ keycloak_bootstrap_admin_password }}"
        id: "{{ keycloak_eggplant_realm }}"
        realm: "{{ keycloak_eggplant_realm }}"
        state: present

    - name: Create the epgw client
      community.general.keycloak_client:
        auth_keycloak_url: http://localhost:8080/
        auth_realm: master
        auth_username: "{{ keycloak_bootstrap_admin_username }}"
        auth_password: "{{ keycloak_bootstrap_admin_password }}"
        realm: "{{ keycloak_eggplant_realm }}"
        id: "{{ keycloak_epgw_client_id }}"
        client_id: "{{ keycloak_epgw_client_id }}"
        direct_access_grants_enabled: true
        secret: "{{ keycloak_epgw_client_secret }}"
        state: present

    - name: Create an Eggplant user
      community.general.keycloak_user:
        auth_keycloak_url: http://localhost:8080/
        auth_realm: master
        auth_username: "{{ keycloak_bootstrap_admin_username }}"
        auth_password: "{{ keycloak_bootstrap_admin_password }}"
        username: eggy
        email: eggy.aubergine@eggplant.io
        enabled: true
        emailVerified: false
        credentials:
            - type: password
              value: aubergine
              temporary: false
        state: present